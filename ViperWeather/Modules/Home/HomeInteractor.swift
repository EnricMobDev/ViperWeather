//
//  HomeInteractor.swift
//  ViperWeather
//
//  Created by Enric Pou Villanueva on 04/10/2018.
//  Copyright (c) 2018 Enric Pou Villanueva. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class HomeInteractor: HomePresenterToInteractorProtocol{
    
    var presenter: HomeInteractorToPresenterProtocol?
    
    func fetchLocalWeather() {
        
        APIClient.getDefaultWeather { (DTO, error) in
            if error != nil {
                self.presenter?.fetchedWeatherFailed(error: "Error")
            } else {
                guard let dto = DTO else { return }
                self.fetchWeatherDetail(info: dto)
            }
        }
    }
    
    private func fetchWeatherDetail(info : LocalWeatherResponse){
        
        guard let url = info.datos else { return }
        DynamicVariables.Networking.Url.weather_detail = url
        
        APIClient.getDetailWeather { (DTO, error) in
            if error != nil {
                self.presenter?.fetchedWeatherFailed(error: "Error")
            } else {
                guard let dto = DTO else { return }
                self.presenter?.fetchedWeatherSuccess(data: dto)
            }
        }
    }
  
    //Old call
//    func fetchLocalWeather() {
//
//
//        localWeatherPetition.fetchLocalWeatherService(success: { (response) in
//
//            guard let dataResponse = response.datos else { return }
//            self.detailLocalWeather.fetchDetailLocalWeatherService(localWeatherUrl: dataResponse, success: { (localWeatherResponse) in
//
//                self.presenter?.detailWeatherResponseSucceed(localWeatherResponse)
//
//            }, failure: { (error) in
//                self.presenter?.detailWeatherResponseFailed(error)
//            })
//        }) { (error) in
//            self.presenter?.detailWeatherResponseFailed(error)
//        }
//    }
}
